import unittest
import swacmod.model as m
import warnings
import swacmod.input_output as input_output
import test.file_test_helpers as file_test_helpers

class Test_Get_Sfr_File(unittest.TestCase):
	def test_get_sfr_file_mfusg(self):
		run_name = "sfr-mfusg-aardvark"
		gwmodel_type = "mfusg"
		filename = "output_files/sfr-mfusg-aardvark.sfr"

		data = {
			"params" : {
				"node_areas" : [-1, 100, 200, 300],
				"run_name" : run_name,
				"time_periods" : [1, 2],
				"num_nodes" : 3,
				"routing_topology" : {
					1 : [1, 20, 30, 40, 50, 60, 70, 80, 90, 100],
					2 : [2, 20, 30, 40, 50, 60, 70, 80, 90, 100],
					3 : [3, 20, 30, 40, 50, 60, 70, 80, 90, 100],
				},
				"istcb1" : None,
				"istcb2" : None,
				"gwmodel_type" : gwmodel_type,
			}
		}
		runoff = [-1, 5, 7, 11, 13, 17, 19]
		with warnings.catch_warnings():
			warnings.filterwarnings("ignore", category=DeprecationWarning)
			sfr = m.get_sfr_file(data, runoff)
		input_output.dump_sfr_output(sfr)
		actual = file_test_helpers.slurp(filename)
		self.assertEqual(expected_sfr_mfusg_aardvark, actual)

	def test_get_sfr_file_mf6(self):
		run_name = "sfr-mf6-aardvark"
		gwmodel_type = "mf6"
		filename = "output_files/sfr-mf6-aardvark.sfr"
		disv = True
		sfr_obs = []

		data = {
			"params" : {
				"node_areas" : [-1, 100, 200, 300],
				"run_name" : run_name,
				"time_periods" : [1, 2],
				"num_nodes" : 3,
				"routing_topology" : {
					1 : [1, 1, 30, 40, 50, 60, 70, 80, 90, 100],
					2 : [2, 1, 30, 40, 50, 60, 70, 80, 90, 100],
					3 : [3, 1, 30, 40, 50, 60, 70, 80, 90, 100],
				},
				"istcb1" : None,
				"istcb2" : None,
				"gwmodel_type" : gwmodel_type,
				"disv" : disv,
				"sfr_obs" : sfr_obs,
			}
		}
		runoff = [-1, 5, 7, 11, 13, 17, 19]
		with warnings.catch_warnings():
			warnings.filterwarnings("ignore", category=DeprecationWarning)
			sfr = m.get_sfr_file(data, runoff)
		sfr.write()
		actual = file_test_helpers.slurp_without_first_line(filename)
		self.assertEqual(expected_sfr_mf6_aardvark, actual)

expected_sfr_mfusg_aardvark = """# SFR package for  MODFLOW-USG, generated by SWAcMod.
reachinput 
3 3 0 0 86400.00000000 0.00010000 0 0 1 
30 1 1 40.0 60.0 1e-04 70.0 80.0
30 2 1 40.0 60.0 1e-04 70.0 80.0
30 3 1 40.0 60.0 1e-04 70.0 80.0
3 0 0
1 0 1 0 0.0 0.0 0.0 0.0 
100.0 90.0 
100.0 90.0 
2 0 2 0 0.0 1.4 0.0 0.0 
100.0 90.0 
100.0 90.0 
3 0 3 0 0.0 3.3 0.0 0.0 
100.0 90.0 
100.0 90.0 
3 0 0
1 0 1 0 0.0 0.0 0.0 0.0 
100.0 90.0 
100.0 90.0 
2 0 2 0 0.0 3.4 0.0 0.0 
100.0 90.0 
100.0 90.0 
3 0 3 0 0.0 5.7 0.0 0.0 
100.0 90.0 
100.0 90.0 
"""

expected_sfr_mf6_aardvark = """BEGIN options
  UNIT_CONVERSION   86400.00000000
END options

BEGIN dimensions
  NREACHES  3
END dimensions

BEGIN packagedata
  1  1 30      40.00000000     100.00000000  1.00000000E-04      60.00000000      70.00000000      80.00000000  0.0001  1       1.00000000  0
  2  1 30      40.00000000     100.00000000  1.00000000E-04      60.00000000      70.00000000      80.00000000  0.0001  1       1.00000000  0
  3  1 30      40.00000000     100.00000000  1.00000000E-04      60.00000000      70.00000000      80.00000000  0.0001  1       1.00000000  0
END packagedata

BEGIN connectiondata
  1  -1
  2  -2
  3  -3
END connectiondata

BEGIN period  1
  1  STAGE  150
  1  STATUS  SIMPLE
  2  STAGE  150
  2  STATUS  SIMPLE
  3  STAGE  150
  3  STATUS  SIMPLE
  1  RUNOFF  0.0
  1  INFLOW  0.0
  2  RUNOFF  1.4000000000000001
  2  INFLOW  0.0
  3  RUNOFF  3.3000000000000003
  3  INFLOW  0.0
END period  1

BEGIN period  2
  1  RUNOFF  0.0
  1  INFLOW  0.0
  2  RUNOFF  3.4
  2  INFLOW  0.0
  3  RUNOFF  5.7
  3  INFLOW  0.0
END period  2

"""