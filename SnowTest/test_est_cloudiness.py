import unittest
import numpy as np
import swacmod.snow_melt as snow_melt

class EstCloudinessTest(unittest.TestCase):
	def test_zero(self):
		actual = self.calculateCloudiness([0], [0])
		np.testing.assert_almost_equal(1, actual)

	def test_non_zero(self):
		actual = self.calculateCloudiness([15], [7])
		np.testing.assert_almost_equal(0.2668873, actual)

	def test_longer_list(self):
		actual = self.calculateCloudiness(range(0, 100), 0)
		expected = [
			1.0000000, 1.0000000, 1.0000000, 1.0000000, 1.0000000, 1.0000000, 0.9404857,
			0.8280145, 0.7087013, 0.5887814, 0.4741171, 0.3695504, 0.2784633, 0.2026038,
			0.1421731, 0.1386177, 0.1383458, 0.1409477, 0.1461730, 0.1538818, 0.1640077,
			0.1765313, 0.1914577, 0.2087995, 0.2285623, 0.2507324, 0.2752683, 0.3020931,
			0.3310911, 0.3621061, 0.3949425, 0.4293689, 0.4651237, 0.5019223, 0.5394649,
			0.5774451, 0.6155587, 0.6535114, 0.6910255, 0.7278460, 0.7637448, 0.7985240,
			0.8320170, 0.8640896, 0.8946386, 0.9235911, 0.9509017, 0.9765501, 1.0000000,
			1.0000000, 1.0000000, 1.0000000, 1.0000000, 1.0000000, 1.0000000, 1.0000000,
			1.0000000, 1.0000000, 1.0000000, 1.0000000, 1.0000000, 1.0000000, 1.0000000,
			1.0000000, 1.0000000, 1.0000000, 1.0000000, 1.0000000, 1.0000000, 1.0000000,
			1.0000000, 1.0000000, 1.0000000, 1.0000000, 1.0000000, 1.0000000, 1.0000000,
			1.0000000, 1.0000000, 1.0000000, 1.0000000, 1.0000000, 1.0000000, 1.0000000,
			1.0000000, 1.0000000, 1.0000000, 1.0000000, 1.0000000, 1.0000000, 1.0000000,
			1.0000000, 1.0000000, 1.0000000, 1.0000000, 1.0000000, 1.0000000, 1.0000000,
			1.0000000, 1.0000000
			]
		np.testing.assert_almost_equal(expected, actual)


	def calculateCloudiness(self, Tx, Tn):
		return snow_melt.EstCloudiness(np.array(Tx), np.array(Tn))	